19d18
< define('CURL_ENABLED', function_exists('curl_version'));
57d55
<         'validate_url_with_curl' => CURL_ENABLED,
75a74,80
>   $form['validate_url'] = array(
>     '#type' => 'checkbox',
>     '#title' => t('Validate URL'),
>     '#default_value' => isset($instance['settings']['validate_url']) && ($instance['settings']['validate_url'] !== '') ? $instance['settings']['validate_url'] : TRUE,
>     '#description' => t('If checked, the URL field will be verified as a valid URL during validation.'),
>   );
> 
188a194,198
>   $form['attributes']['configurable_class'] = array(
>     '#title' => t("Allow the user to enter a custom link class per link"),
>     '#type' => 'checkbox',
>     '#default_value' => empty($instance['settings']['attributes']['configurable_class']) ? '' : $instance['settings']['attributes']['configurable_class'],
>   );
209,241d218
< 
<   $form['validate_url'] = array(
<     '#type' => 'checkbox',
<     '#title' => t('Validate URL'),
<     '#default_value' => isset($instance['settings']['validate_url']) && ($instance['settings']['validate_url'] !== '') ? $instance['settings']['validate_url'] : TRUE,
<     '#description' => t('If checked, the URL syntax will be verified.'),
<   );
< 
<   $cURLDescription = 'If checked, a successful <a href="http://www.php.net/manual/en/book.curl.php">cURL</a> response will be required to pass validation.';
< 
<   $defaultcURLValue = isset($instance['settings']['validate_url_with_curl']) && ($instance['settings']['validate_url_with_curl'] !== '') ? $instance['settings']['validate_url_with_curl'] : FALSE;
< 
<   if (!CURL_ENABLED) {
<     $cURLDescription = 'Please enable <a href="http://www.php.net/manual/en/book.curl.php">cURL</a> on the server to implement this feature.';
<     $defaultcURLValue = FALSE;  
<   }
< 
<   $form['validate_url_with_curl'] = array(
<     '#disabled' => !CURL_ENABLED,
<     '#type' => 'checkbox',
<     '#title' => t('Additionally validate URL with cURL'),
<     '#default_value' => $defaultcURLValue,
<     '#description' => t($cURLDescription),
<     // toggle the curl option if validating URL syntax
<     '#states' => array(
<       'visible' => array(
<        '#edit-instance-settings-validate-url' => array(
<         'checked' => TRUE
<         ),
<       ),
<     )
<   );
< 
419c396
<     if (link_validate_url(trim($item['url'])) == FALSE) {      
---
>     if (link_validate_url(trim($item['url'])) == FALSE) {
425,437d401
<     } else if ($instance['settings']['validate_url_with_curl'] !== 0 || is_null($instance['settings']['validate_url_with_curl']) || !isset($instance['settings']['validate_url_with_curl'])) {
<         // URL syntax passed validation, now try cURL
<         if (CURL_ENABLED) {
<           if (link_validate_url_with_curl(trim($item['url'])) == FALSE) {
<             $errors[$field['field_name']][$langcode][$delta][] = array(
<               'error' => 'link_required',
<               'message' => t('cURL request to %field failed.', array('%field' => $instance['label'])),
<               'error_element' => array('url' => TRUE, 'title' => FALSE),
<             );
<           }  
<         } else {
<           drupal_set_message(t('cURL is not available on this system, bypassing cURL validation for %field.', array('%field' => $instance['label'])), 'warning');
<         }
439d402
< 
636a600,609
>   // Handle classes
>   if (!empty($item['attributes']['class'])){
>     $classes = explode(' ', $item['attributes']['class']);
>     foreach ($classes as &$class) {
>       $class = drupal_html_class($class);
>     }
>     $item['attributes']['class'] = implode(' ', $classes);
>   }
>   unset($item['attributes']['configurable_class']);
> 
767a741,743
>   if (!empty($element['attributes']['class'])) {
>     $output .= '<div class="link-attributes">'. drupal_render($element['attributes']['class']) .'</div>';
>   }
860a837,845
>   if (!empty($settings['attributes']['configurable_class']) && $settings['attributes']['configurable_class'] == 1) {
>     $element['attributes']['class'] = array(
>       '#type' => 'textfield',
>       '#title' => t('Custom link class'),
>       '#default_value' => isset($attributes['class']) ? $attributes['class'] : '',
>       '#field_prefix' => 'class = "',
>       '#field_suffix' => '"',
>     );
>   }
1169,1201d1153
<  * Validates a URL with cURL.
<  *
<  * @param string $url
<  * 
<  * @return boolean
<  *   Returns boolean FALSE if the URL is not valid or if cURL is not enabled.
<  */
< function link_validate_url_with_curl($url) {
<   if (!CURL_ENABLED) return false;
< 
<   global $base_url;
<   $type = link_validate_url($url);
<   
<   if ($type == LINK_INTERNAL) {
<     $url = $base_url . $url;
<   } else if ($type == LINK_FRONT) {
<     $url = $base_url;
<   }
< 
<   $ch = curl_init($url);  
<   curl_setopt($ch, CURLOPT_TIMEOUT, 10);  
<   curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 10);  
<   curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
<   curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
<   curl_setopt($ch, CURLOPT_MAXREDIRS, 10);  
<   $data = curl_exec($ch);  
<   $httpcode = curl_getinfo($ch, CURLINFO_HTTP_CODE);  
<   curl_close($ch);
<   
<   return ($httpcode >= 200 && $httpcode <= 302);  
< }
< 
< /**
1345c1297
<     foreach (array('attributes', 'display', 'url', 'title', 'title_value', 'enable_tokens', 'validate_url', 'validate_url_with_curl') as $setting) {
---
>     foreach (array('attributes', 'display', 'url', 'title', 'title_value', 'enable_tokens', 'validate_url') as $setting) {
1359c1311
<     foreach (array('attributes', 'display', 'url', 'title', 'title_value', 'enable_tokens', 'validate_url', 'validate_url_with_curl') as $setting) {
---
>     foreach (array('attributes', 'display', 'url', 'title', 'title_value', 'enable_tokens', 'validate_url') as $setting) {
