@import "compass/css3";
@import "compass/utilities";

@mixin exposed-filter-last-element($paddingRight: 75px) {
	// non-smartphone preloader
	background-repeat: no-repeat;
	background-position: -9999px -9999px;
	@include background-image-retina(loader/30, gif, 30px, 30px);

	.ajax-loading & {
		padding-right: $paddingRight;
		background-position: right 8px;

		@include respond-to(smartphone) {
			padding-right: 0;
			background: none;	
		}
	}
}

@mixin hyphy {
	-webkit-hyphens: auto;
    -moz-hyphens: auto;
    -ms-hyphens: auto;
    -o-hyphens: auto;
    hyphens: auto;
    
	@include word-break(break-all);
	word-break: break-word;
}

@mixin subhead {
	color: $black;
	font-weight: $medium;
	margin-bottom: $padding;
	font-size: $largeText;
	line-height: $largeTextLineHeight;

	@include respond-to(smartphone) {
		margin-bottom: $smartphonePadding;
		font-size: $sectionTitleSmartphone;
		line-height: $sectionTitleSmartphoneLineHeight;
	}
}

@mixin two-column-layout {
	// general layout
	.panel-col-first,
	.right-rail {
		@include box-sizing(border-box);
	}

	.panel-col-first {
		padding-right: $padding;
		width: 75%;
	}

	.right-rail {
		width: 25%;	
	}

	@include respond-to(smartphone) {
		.panel-col-first,
		.right-rail {
			padding-right: 0;
			width: 100%;
		}	
	}
}

@mixin select-appearance {
	@include appearance(none);

	// browser hacks
	&::-ms-expand {
    	display: none;
	}

	@include no-focus-border;
	text-indent: 0.01px;
	text-overflow: '';
}

@mixin select-styles {
	@include select-appearance;
	@include hand-cursor;
	@include box-sizing(border-box);

	$arrowWidth: 32px;
	min-width: 175px;
	padding-right: $arrowWidth + 8;

	@include background-image-retina(select-arrow-blue, png, $arrowWidth, 9px);
	background-repeat: no-repeat;
	background-position: right center;

	// < IE 10 can't remove the default drop down arrow
	.lt-ie10 & {
		background-image: none;
		padding-right: 8px;		
	}

	&:focus {
		border: 1px solid $text-link;
		@include box-shadow(rgba($text-link, 0.6) 0 0 5px);
	}
}

@mixin embiggen-highlight-text {
	h3,
	.views-field-title,
	.views-field-name {	
		font-size: $slightlyLargerHeaderText;
		line-height: $slightlyLargerHeaderTextLineHeight;
	}

	h3,
	.views-field-title,
	.views-field-name,
	.views-field-field-summary,
	.views-field-body,
	.views-field-description {
		@include respond-to(smartphone) {
			font-size: $smartphoneText;
			line-height: $smartphoneLineHeight;
		}
	}
}

@mixin position-sticky($top) {
	position: -webkit-sticky;
	position: -moz-sticky;
	position: -ms-sticky;
	position: -o-sticky;
	position: sticky;
	top: $top;
}

@mixin selection {
    // 
    ::-moz-selection { @content; }
    ::selection { @content; }
}

@mixin disable-link {
	pointer-events: none;
	cursor: default;
}

@mixin top-aligned-rows {
	clear: none;
	float: none;
	display: inline-block;
	vertical-align: top;
	position: relative !important;
}

@mixin right-rail-border {
	border-top: 2px solid $line-grey-dark;
	padding-top: $padding;
}

@mixin arrow($filePrefix) {
	@include box-sizing(border-box);
	@include background-image-retina($filePrefix, png, 20px, 20px);
	background-repeat: no-repeat;
	background-position: right center;
	
	padding-top: 3px;
	padding-right: 25px;
}

@mixin testimonial-icon($filePrefix) {
	@include background-image-retina($filePrefix, png, 20px, 20px);
	background-repeat: no-repeat;
	background-position: left center;
	padding-right: 25px;
}

@mixin cta-button {
	@include background-image(linear-gradient(#ed902b, #e26125));
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ed902b', endColorstr='#e26125', GradientType=0);
	background-position: 0 0;

	@include box-shadow(rgba(0, 0, 0, .3) 1px 1px 1px);
	@include border-radius(2px);

	border: 1px solid rgba(0, 0, 0, .1);
	border-top: none;
	border-left: none;

	padding: $padding - 3px;
	padding-top: $padding - 5px;

	@include respond-to(smartphone) {
		padding: $smartphonePadding !important;	
	}

	a {
		display: block;
		color: $white;
		font-weight: $medium;
		@include arrow('arrow');
	}
}

@mixin cta-block($bgColor) {
	background-color: $bgColor;
	margin: 0;

	a {
		display: block;
		color: $white;
		padding: $padding;

		@include background-image-retina(arrow-large, png, 30px, 30px);
		background-repeat: no-repeat;

		$bottomPos: $squareWidth - (30 + $padding);
		background-position: $padding $bottomPos;

		@include respond-to(tablet) {
			$bottomPos: $squareWidthTablet - (30 + $padding);
			background-position: $padding $bottomPos;	
		}	
	}

	&, a {
		@include box-sizing(border-box);
		width: $squareWidth;
		height: $squareWidth;
		font-weight: $light;

		font-size: $headerTextReduced;
		line-height: $headerTextReducedLineHeight;

		@include respond-to(tablet) {
			width: $squareWidthTablet;
			height: $squareWidthTablet;

			font-size: $largeText;
			line-height: $largeTextLineHeight - 3px;
		}

		@include respond-to(smartphone) {
			width: 100%;
			height: inherit;

			a {
				font-size: $largeText;
				line-height: $largeTextLineHeight;
				padding: 0;
				@include background-image-retina(arrow, png, 20px, 20px, smartphone);
				background-position: right center;	
			}
		}
	}

	& > * {
		padding: 0;

		@include respond-to(smartphone) {
			padding: $padding;
		}	
	}
}

@mixin no-focus-border {
	outline: none;
	
	&::-moz-focus-inner {
		border: 0;
	}

	&:-moz-focusring {
    	color: transparent;
    	text-shadow: 0 0 0 #000;
	}
}

@mixin hide-text-calacademy {
	@include hide-text;
	display: block;
	line-height: 0;
}

@mixin hand-cursor {
	cursor: hand;
	cursor: pointer;
}

@mixin initialize-fade($initialOpacity) {
	// @see
	// http://stackoverflow.com/questions/7947385/hovering-over-css-transition-in-safari-lightens-certain-font-color
	-webkit-transform: translateZ(0);
	
	@include transition(opacity 300ms ease-out);
	@include opacity($initialOpacity);
}

@mixin text-box($bgColor, $textColor, $linkColor) {
	@include box-sizing(border-box);
	
	$size: ($squareWidth * 2) + ($padding * 3);
	$tabletSize: ($squareWidthTablet * 2) + ($padding * 3);

	width: $size;
	min-height: $size;
	border: $padding solid $white;
	padding: $padding;
	background-color: $bgColor;
	
	&, p {
		font-weight: $book;
		color: $textColor !important;

		font-size: $headerTextReduced;
		line-height: $headerTextReducedLineHeight;

		@include respond-to(tablet) {
			font-size: $sectionTitleSmartphone;
			line-height: $sectionTitleSmartphoneLineHeight;	
		}

		a {
			color: $linkColor !important;
			text-decoration: none;
		}
	}

	p {
		padding: 0;
		margin: 0;
	}

	@include respond-to(tablet) {
		width: $tabletSize;
		min-height: $tabletSize;	
	}

	@include respond-to(smartphone) {
		width: 100%;
		min-height: inherit;
		border: 0;
		padding: $smartphonePadding;

		&, p {
			font-size: $largeText;
			line-height: $largeTextLineHeight;
		}
	}
}

@mixin respond-to($media) {
	@if $media == smartphone {
		@media only screen 
		and (min-width: $breakSmartphone) 
		and (max-width: $breakTablet - 1) {
			@content;
		}
	}
	@if $media == smartphone-portrait {
		@media only screen 
		and (min-width: $breakSmartphone) 
		and (max-width: $breakTablet - 1)
		and (orientation: portrait) {
			@content;
		}
	}
	@if $media == smartphone-landscape {
		@media only screen 
		and (min-width: $breakSmartphone) 
		and (max-width: $breakTablet - 1)
		and (orientation: landscape) {
			@content;
		}
	}
	@else if $media == tablet {
		@media only screen 
		and (min-width: $breakTablet) 
		and (max-width: $breakDesktop) {
			@content;
		}
	}
	@else if $media == tablet-portrait {
		@media only screen 
		and (min-width: $breakTablet) 
		and (max-width: $breakDesktop)
		and (orientation: portrait) {
			@content;
		}
	}
	@else if $media == tablet-landscape {
		@media only screen 
		and (min-width: $breakTablet) 
		and (max-width: $breakDesktop)
		and (orientation: landscape) {
			@content;
		}
	}
	@else if $media == desktop {
		@media only screen 
		and (min-width: $breakDesktop + 1) {
			@content;
		}
	}
}

@mixin background-image-retina($file, $type, $width, $height, $media:null) {
	// swap to hi-res image
	background-image: url($assetPath + '/' + $file + '.' + $type);

	@media
	only screen and (-webkit-min-device-pixel-ratio: 2),
	only screen and (-moz-min-device-pixel-ratio: 2),
	only screen and (-o-min-device-pixel-ratio: 2/1),
	only screen and (min-device-pixel-ratio: 2),
	only screen and (min-resolution: 192dpi),
	only screen and (min-resolution: 2dppx) {
		& {
			background-image: url($assetPath + '/' + $file + '@2x.' + $type);
		}
	}

	// background size
	$condition: "only screen and (min-width: 0)"; // default

	@if $media == smartphone {
		$condition: "only screen and (min-width: " + $breakSmartphone + ") and (max-width:" + ($breakTablet - 1) + ")";
	}
	@else if $media == tablet {
		$condition: "only screen and (min-width: " + $breakTablet + ") and (max-width:" + $breakDesktop + ")";
	}
	@else if $media == desktop {
		$condition: "only screen and (min-width: " + ($breakDesktop + 1) + ")";
	}

	@media
	#{$condition} {
		& {
			@include background-size($width, $height);
		}
	}
}

@mixin follow-buttons($suffix:'') {
	$socialWidth: 25px;
	$socialWidthSmartphone: 35px;

	a {
		@include hide-text-calacademy;
		background-repeat: no-repeat;
		
		width: $socialWidth;
		height: $socialWidth;

		@include respond-to(smartphone) {
			width: $socialWidthSmartphone;
			height: $socialWidthSmartphone;	
		}
	}
	
	.facebook a {
		@include background-image-retina('social/facebook' + $suffix, png, $socialWidth, $socialWidth);
		@include background-image-retina('social/facebook-large' + $suffix, png, $socialWidthSmartphone, $socialWidthSmartphone, smartphone);
	}
	
	.twitter a {
		@include background-image-retina('social/twitter' + $suffix, png, $socialWidth, $socialWidth);
		@include background-image-retina('social/twitter-large' + $suffix, png, $socialWidthSmartphone, $socialWidthSmartphone, smartphone);
	}
	
	.flickr a {
		@include background-image-retina('social/flickr' + $suffix, png, $socialWidth, $socialWidth);
		@include background-image-retina('social/flickr-large' + $suffix, png, $socialWidthSmartphone, $socialWidthSmartphone, smartphone);
	}

	.youtube a {
		@include background-image-retina('social/youtube' + $suffix, png, $socialWidth, $socialWidth);
		@include background-image-retina('social/youtube-large' + $suffix, png, $socialWidthSmartphone, $socialWidthSmartphone, smartphone);
	}
}

@mixin submit-button-container {
	input {
		@include appearance(none);
		background-color: transparent;
		margin: 0;
		padding: 0;
		border: 0;
		color: $white;
		text-align: left;
		width: 100%;
		font-size: $slightlyLargerText;
		line-height: $slightlyLargerTextLineHeight;

		@include background-image-retina(arrow, png, 20px, 20px);
		background-repeat: no-repeat;
		background-position: right 0;

		.no-touch &:hover {
			@include opacity(.6);
		}
	}

	@include box-sizing(border-box);
	@include cta-button;
	@include border-radius(3px);
	padding: $smartphonePadding;
	border: 0;
}
